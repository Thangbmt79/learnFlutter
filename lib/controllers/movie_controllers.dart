import 'package:dio/dio.dart';
import 'package:firstflutter/main.dart';
import 'package:firstflutter/models/detail_movies.dart';
import 'package:firstflutter/models/movies.dart';

class MoviesController {
  Dio dio;
  MoviesController() : dio = Dio();

  Future<Autogenerateds> getMovies() async {
    try {
      dio.options.headers['Authorization'] =
          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDg3ZjRjYTEyMzg3MTczMGI1ZDc4MjU4MzUzZGI5YiIsInN1YiI6IjY1OGQ1NzQ5NTVjMWY0NjMxMTM5ODgwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hgYXmJ6kmKLMRCHJVlpxbMR8-ERfNjk-5GSI3mn-DWc';

      final response =
          await dio.get('https://api.themoviedb.org/3/discover/movie');

      if (response.statusCode == 200) {
        final List<dynamic> resultsData = response.data['results'];

        List<Results> movies =
            resultsData.map((data) => Results.fromJson(data)).toList();

        final Autogenerateds autogenerated = Autogenerateds(
          page: response.data['page'],
          results: movies,
          totalPages: response.data['total_pages'],
          totalResults: response.data['total_results'],
        );

        return autogenerated;
      } else {
        throw Exception('Failed to load movies');
      }
    } catch (e) {
      throw Exception('Error: $e');
    }
  }

  Future<Autogenerated> getMoviesById(int id) async {
    try {
      dio.options.headers['Authorization'] =
          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDg3ZjRjYTEyMzg3MTczMGI1ZDc4MjU4MzUzZGI5YiIsInN1YiI6IjY1OGQ1NzQ5NTVjMWY0NjMxMTM5ODgwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hgYXmJ6kmKLMRCHJVlpxbMR8-ERfNjk-5GSI3mn-DWc';

      final res = await dio.get('https://api.themoviedb.org/3/movie/$id');

      logger.f('Response data: ${res.data}');

      if (res.statusCode == 200) {
        final dynamic result = res.data;

        return _parseMovieDetails(result);
      } else {
        throw Exception(
            'Failed to load movie details. Status code: ${res.statusCode}');
      }
    } catch (e) {
      logger.f('ErrorDetailMovies: $e');
      throw Exception('ErrorDetailMovies: $e');
    }
  }

  Autogenerated _parseMovieDetails(dynamic result) {
    if (result != null && result is Map<String, dynamic>) {
      return Autogenerated.fromJson(result);
    } else {
      logger.f('Invalid response format');
      throw Exception('Invalid response format');
    }
  }
}

final moviesController = MoviesController();
